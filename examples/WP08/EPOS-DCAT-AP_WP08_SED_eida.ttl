@prefix adms: <http://www.w3.org/ns/adms#> .  
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .  
@prefix epos: <https://www.epos-eu.org/epos-dcat-ap#> .  
@prefix dc: <http://purl.org/dc/elements/1.1/> .  
@prefix dct: <http://purl.org/dc/terms/> .  
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .  
@prefix hydra: <http://www.w3.org/ns/hydra/core#> .  
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .  
@prefix schema: <http://schema.org/> .  
@prefix dcat: <http://www.w3.org/ns/dcat#> .  
@prefix cnt: <http://www.w3.org/2011/content#> .  
@prefix locn: <http://www.w3.org/ns/locn#> .  
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .  
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .  
@prefix http: <http://www.w3.org/2006/http#> .  
@prefix owl: <http://www.w3.org/2002/07/owl#> .  
@prefix gsp: <http://www.opengis.net/ont/geosparql#> .  

<orcid.org/0000-0001-8667-8549> a schema:Person;
	schema:identifier [ a schema:PropertyValue;
		schema:propertyID "orcid";
		schema:value "orcid.org/0000-0001-8667-8549";
	]; 
	schema:familyName "K채stli Philipp";
	schema:address [ a schema:PostalAddress;
		schema:streetAddress "Sonneggstr. 5, NO FO 69.2";
		schema:addressLocality "Z체rich";
		schema:postalCode "8092";
		schema:addressCountry "Switzerland";
	]; 
	schema:email "kaestli@sed.ethz.ch";
	schema:telephone "+41446333422";
	schema:url "http://orcid.org/0000-0001-8667-8549"^^xsd:anyURI;
	schema:qualifications "IT coordinator";
	schema:affiliation <PIC:999979015>;
	schema:contactPoint <orcid.org/0000-0001-8667-8549/legalContact>;
	schema:contactPoint <orcid.org/0000-0001-8667-8549/financialContact>;
. 

<orcid.org/0000-0001-8626-2703> a schema:Person;
	schema:identifier [ a schema:PropertyValue;
		schema:propertyID "orcid";
		schema:value "orcid.org/0000-0001-8626-2703";
	]; 
	schema:familyName "Clinton John";
	schema:address [ a schema:PostalAddress;
		schema:streetAddress "Sonneggstr. 5, NO FO 69.3";
		schema:addressLocality "Z체rich";
		schema:postalCode "8092";
		schema:addressCountry "Switzerland";
	]; 
	schema:email "john.clinton@sed.ethz.ch";
	schema:telephone "+41446334436";
	schema:url "http://orcid.org/0000-0001-8626-2703"^^xsd:anyURI;
	schema:qualifications "Director of the Seismic Network";
	schema:affiliation <PIC:999979015>;
	schema:contactPoint <orcid.org/0000-0001-8626-2703/scientificContact>;
. 

<http://eida.ethz.ch/fdsnws/dataselect/1/query?> a epos:WebService;
	schema:identifier "http://eida.ethz.ch/fdsnws/dataselect/1/query?";
	#schema:identifier [ a schema:PropertyValue; 
		#schema:propertyID  "DDSS-ID"; 
		#schema:value  ""; 
	#]; 
	schema:description "access to Seismic Waveform data maintained by SED. Service implements FDSN dataselect web service 1.0 standard";
	dcat:theme <epos:Seismicwaveforms>;
	schema:name "FDSN Dataselect - Swiss Seismological Service at ETH Zurich";
	hydra:entrypoint "http://eida.ethz.ch/fdsnws/dataselect/1/query?"^^xsd:anyURI; 
	schema:provider <PIC:999979015>;
	schema:datePublished "2015-01-01"^^xsd:date;
	schema:dateModified "2017-02-16"^^xsd:date;
	dct:spatial [ a dct:Location; 
		locn:geometry "POLYGON(5.6 45.4,5.6 48.3,11.1 48.3,11.1 45.4,5.6 45.4)"^^gsp:wktLiteral; 
	]; 
	hydra:supportedOperation <http://eida.ethz.ch/fdsnws/dataselect/1/query?/operation>;
	schema:keywords "seismology"," seismicity"," earthquakes"," waveformDataselect","FDSN-WS","Seismic Waveform","SED","ETHZ","EIDA";
	dct:license "https://creativecommons.org/licenses/by-sa/3.0/ch/"^^xsd:anyURI;
	dct:temporal [ a dct:PeriodOfTime; 
		schema:startDate "1980-01-01T00:00:00Z"^^xsd:dateTime; 
		#schema:endDate "YYYY-MM-DDThh:mm:ssZ"^^xsd:dateTime; 
	]; 
. 

<http://eida.ethz.ch/fdsnws/station/1/query?> a epos:WebService;
	schema:identifier "http://eida.ethz.ch/fdsnws/station/1/query?";
	#schema:identifier [ a schema:PropertyValue; 
		#schema:propertyID  "DDSS-ID"; 
		#schema:value  ""; 
	#]; 
	schema:description "access to Seismic station, instrumentation, and response  data maintained by SED. Service implements FDSN station web service 1.0 standard";
	dcat:theme <epos:Seismicstations>;
	schema:name "FDSN Station - Swiss Seismological Service at ETH Zurich";
	hydra:entrypoint "http://eida.ethz.ch/fdsnws/station/1/query?"^^xsd:anyURI; 
	schema:provider <PIC:999979015>;
	schema:datePublished "2015-01-01"^^xsd:date;
	schema:dateModified "2017-02-16"^^xsd:date;
	dct:spatial [ a dct:Location; 
		locn:geometry "POLYGON(5.6 45.4,5.6 48.3,11.1 48.3,11.1 45.4,5.6 45.4)"^^gsp:wktLiteral; 
	]; 
	hydra:supportedOperation <http://eida.ethz.ch/fdsnws/station/1/query?/operation>;
	hydra:supportedOperation <http://eida.ethz.ch/fdsnws/station/1/query?/operation>;
	schema:keywords "seismology"," seismicity"," earthquakes"," waveform"," instrumentation","SED","ETHZ","metadata";
	dct:license "https://creativecommons.org/licenses/by-sa/3.0/ch/"^^xsd:anyURI;
	dct:temporal [ a dct:PeriodOfTime; 
		schema:startDate "1980-01-01T00:00:00Z"^^xsd:dateTime; 
		#schema:endDate "YYYY-MM-DDThh:mm:ssZ"^^xsd:dateTime; 
	]; 
. 

<http://eida.ethz.ch/fdsnws/station/1/query?> a epos:WebService;
	schema:identifier "http://eida.ethz.ch/fdsnws/station/1/query?";
	#schema:identifier [ a schema:PropertyValue; 
		#schema:propertyID  "DDSS-ID"; 
		#schema:value  ""; 
	#]; 
	schema:description "access to Routing information for FDSN station, FDSN dataselect and EIDA WFcatalog web services. Service endpoint clone maintained by SED. Service implements EIDA routing web service 1.0.3 standard";
	dcat:theme <epos:Seismicdataservices>;
	schema:name "EIDA routing - Swiss Seismological Service at ETH Zurich";
	hydra:entrypoint "http://eida.ethz.ch/eidaws/routing/1/query?"^^xsd:anyURI; 
	schema:provider <PIC:999979015>;
	schema:datePublished "2017-01-01"^^xsd:date;
	schema:dateModified "2017-02-16"^^xsd:date;
	dct:spatial [ a dct:Location; 
		locn:geometry "POLYGON(-180 -90,-180 90,180 90,180 -90,-180 -90)"^^gsp:wktLiteral; 
	]; 
	hydra:supportedOperation <http://eida.ethz.ch/fdsnws/station/1/query?/operation>;
	hydra:supportedOperation <http://eida.ethz.ch/fdsnws/station/1/query?/operation>;
	schema:keywords "seismology"," seismicity"," earthquakes"," waveform"," instrumentation","SED","ETHZ","metadata";
	dct:license "to be defined by EIDA"^^xsd:anyURI;
	dct:temporal [ a dct:PeriodOfTime; 
		schema:startDate "2017-01-01T00:00:00Z"^^xsd:dateTime; 
		#schema:endDate "YYYY-MM-DDThh:mm:ssZ"^^xsd:dateTime; 
	]; 
. 

<http://eida.ethz.ch/eidaws/wfcatalog/1/query?> a epos:WebService;
	schema:identifier "http://eida.ethz.ch/eidaws/wfcatalog/1/query?";
	#schema:identifier [ a schema:PropertyValue; 
		#schema:propertyID  "DDSS-ID"; 
		#schema:value  ""; 
	#]; 
	schema:description "access to Seismic to availability and quality metadata for seismic waveforms archived at SED. Service implements FDSN station web service 1.0 standard";
	dcat:theme <epos:waveformquality>;
	schema:name "EIDA WFcatalog - Swiss Seismological Service at ETH Zurich";
	hydra:entrypoint "http://eida.ethz.ch/eidaws/wfcatalog/1/query?"^^xsd:anyURI; 
	schema:provider <PIC:999979015>;
	schema:datePublished "2015-01-01"^^xsd:date;
	schema:dateModified "2017-02-16"^^xsd:date;
	dct:spatial [ a dct:Location; 
		locn:geometry "POLYGON(5.6 45.4,5.6 48.3,11.1 48.3,11.1 45.4,5.6 45.4)"^^gsp:wktLiteral; 
	]; 
	hydra:supportedOperation <http://eida.ethz.ch/eidaws/wfcatalog/1/query?/operation>;
	schema:keywords "EIDA","ODC","dataquality","availability","metrics","waveform","metadata";
	dct:license "https://creativecommons.org/licenses/by-sa/3.0/ch/"^^xsd:anyURI;
	dct:temporal [ a dct:PeriodOfTime; 
		schema:startDate "2011-01-01T00:00:00Z"^^xsd:dateTime; 
		#schema:endDate "YYYY-MM-DDThh:mm:ssZ"^^xsd:dateTime; 
	]; 
. 

<PIC:999979015> a schema:Organization;
	schema:identifier [ a schema:PropertyValue;
		schema:propertyID "pic";
		schema:value "999979015";
	]; 
	schema:legalName "Swiss Seismological Service at the Federal Institute of Technology Zurich";
	schema:address [ a schema:PostalAddress;
		schema:streetAddress "Sonneggstr. 5, NO H69.2";
		schema:addressLocality "Z체rich";
		schema:postalCode "8092";
		schema:addressCountry "Switzerland";
	]; 
	schema:url "http://www.seismo.ethz.ch"^^xsd:anyURI;
	schema:email "info@sed.ethz.ch";
	schema:contactPoint <orcid.org/0000-0001-8626-2703/scientificContact>;
	schema:contactPoint <orcid.org/0000-0001-8667-8549/legalContact>;
	schema:contactPoint <orcid.org/0000-0001-8667-8549/financialContact>;
. 
	<http://eida.ethz.ch/fdsnws/dataselect/1/query?/operation> a hydra:Operation;
		hydra:method "GET"^^xsd:string;
		hydra:returns "application/vnd.fdsn.mseed";
		hydra:property[ a hydra:IriTemplate;
			hydra:template "http://eida.ethz.ch/fdsnws/dataselect/1/query{?starttime, endtime, network, station, location, channel, quality, minimumlength, nodata}"^^xsd:string;
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "starttime"^^xsd:string;
					rdfs:range "xsd:date";
					rdfs:label "Start of the timespan";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "endtime"^^xsd:string;
					rdfs:range "xsd:date";
					rdfs:label "End of the timespan";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "network"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Network code";
					schema:defaultValue "*";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "station"^^xsd:string;
					rdfs:range "xsd:string";
					schema:defaultValue "*";
					rdfs:label "Station code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "location"^^xsd:string;
					rdfs:range "xsd:string";
					schema:defaultValue "*";
					rdfs:label "Location code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "channel"^^xsd:string;
					rdfs:range "xsd:string";
					schema:defaultValue "*";
					rdfs:label "Channel code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "quality"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Quality";
					http:paramValue "B";
					http:paramValue "M";
					schema:defaultValue "B";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "minimumlength"^^xsd:string;
					rdfs:range "xsd:int";
					rdfs:label "Minimum Length";
					schema:minValue "0";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "nodata"^^xsd:string;
					rdfs:range "xsd:integer";
					rdfs:label "HTTP error code if no data is found";
					http:paramValue "204";
					http:paramValue "404";
					schema:defaultValue "204";
					hydra:required "false"^^xsd:boolean;
				];
		] ;
. 
	<http://eida.ethz.ch/fdsnws/station/1/query?/operation> a hydra:Operation;
		hydra:method "GET"^^xsd:string;
		hydra:returns "application/xml";
		hydra:property[ a hydra:IriTemplate;
			hydra:template "http://eida.ethz.ch/fdsnws/station/1/query{?starttime, endtime, network, station, location, channel, minlatitude, maxlatitude, minlongitude, maxlongitude, level, nodata}"^^xsd:string;
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "starttime"^^xsd:string;
					rdfs:range "xsd:date";
					rdfs:label "Start of the timespan";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "endtime"^^xsd:string;
					rdfs:range "xsd:date";
					rdfs:label "End of the timespan";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "network"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Network code";
					schema:defaultValue "*";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "station"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Station code";
					schema:defaultValue "*";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "location"^^xsd:string;
					rdfs:range "xsd:string";
					schema:defaultValue "*";
					rdfs:label "Location code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "channel"^^xsd:string;
					rdfs:range "xsd:string";
					schema:defaultValue "*";
					rdfs:label "Channel code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "minlatitude"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Minimum Latitude";
					schema:minValue "-90.0";
					schema:maxValue "90.0";
					schema:defaultValue "-90";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "maxlatitude"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Maximum Latitude";
					schema:minValue "-90.0";
					schema:maxValue "90.0";
					schema:defaultValue "90";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "minlongitude"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Minimum Longitude";
					schema:minValue "-180.0";
					schema:maxValue "180.0";
					schema:defaultValue "-180";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "maxlongitude"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Maximum Longitude";
					schema:minValue "-180.0";
					schema:maxValue "180.0";
					schema:defaultValue "180";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "level"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Level";
					http:paramValue "network";
					http:paramValue "station";
					http:paramValue "channel";
					http:paramValue "response";
					schema:defaultValue "station";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "nodata"^^xsd:string;
					rdfs:range "xsd:integer";
					rdfs:label "HTTP error code if no data is found";
					http:paramValue "204";
					http:paramValue "404";
					schema:defaultValue "204";
					hydra:required "false"^^xsd:boolean;
				];
		] ;
. 
	<http://eida.ethz.ch/fdsnws/station/1/query?/operation> a hydra:Operation;
		hydra:method "GET"^^xsd:string;
		hydra:returns "application/xml";
		hydra:property[ a hydra:IriTemplate;
			hydra:template "http://eida.ethz.ch/eidaws/routing/1/query{?starttime, endtime, network, station, location, channel, minlatitude, maxlatitude, minlongitude, maxlongitude, service, format, alternative}"^^xsd:string;
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "starttime"^^xsd:string;
					rdfs:range "xsd:date";
					rdfs:label "Start of the timespan";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "endtime"^^xsd:string;
					rdfs:range "xsd:date";
					rdfs:label "End of the timespan";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "network"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Network code";
					schema:defaultValue "*";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "station"^^xsd:string;
					rdfs:range "xsd:string";
					schema:defaultValue "*";
					rdfs:label "Station code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "location"^^xsd:string;
					rdfs:range "xsd:string";
					schema:defaultValue "*";
					rdfs:label "Location code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "channel"^^xsd:string;
					rdfs:range "xsd:string";
					schema:defaultValue "*";
					rdfs:label "Channel code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "minlatitude"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Minimum Latitude";
					schema:minValue "-90.0";
					schema:maxValue "90.0";
					schema:defaultValue "-90";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "maxlatitude"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Maximum Latitude";
					schema:minValue "-90.0";
					schema:maxValue "90.0";
					schema:defaultValue "90";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "minlongitude"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Minimum Longitude";
					schema:minValue "-180.0";
					schema:maxValue "180.0";
					schema:defaultValue "-180";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "maxlongitude"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Maximum Longitude";
					schema:minValue "-180.0";
					schema:maxValue "180.0";
					schema:defaultValue "180";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "service"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Service";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "format"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Response Format";
					http:paramValue "xml";
					http:paramValue "json";
					schema:defaultValue "xml";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "alternative"^^xsd:string;
					rdfs:range "xsd:boolean";
					schema:defaultValue "false"^^xsd:boolean;
					rdfs:label "include alternative routesor not?";
					hydra:required "false"^^xsd:boolean;
				];
		] ;
. 
	<http://eida.ethz.ch/eidaws/wfcatalog/1/query?/operation> a hydra:Operation;
		hydra:method "GET"^^xsd:string;
		hydra:returns "application/xml";
		hydra:property[ a hydra:IriTemplate;
			hydra:template "http://eida.ethz.ch/eidaws/wfcatalog/1/query{?starttime, endtime, percent_availability_gt, percent_availability_lt, num_gaps_gt, num_gaps_lt, num_overlaps_gt, num_overlaps_lt, sample_stdev_gt, sample_stdev_lt, sample_rms_gt, sample_rms_lt, max_gap_gt, max_gap_lt, sample_min_gt, sample_min_lt, sample_max_gt, sample_max_lt, sample_mean_gt, sample_mean_lt, network, station, location, channel, csegments, longestonly, minlen, include}"^^xsd:string;
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "starttime"^^xsd:string;
					rdfs:range "xsd:time";
					rdfs:label "Starttime of documents";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "endtime"^^xsd:string;
					rdfs:range "xsd:time";
					rdfs:label "Endtime of documents";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "percent_availability_gt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Data availability percentage greater than";
					schema:minValue "0";
					schema:maxValue "100";
					schema:defaultValue "0";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "percent_availability_lt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Data availability percentage smaller than";
					schema:minValue "0";
					schema:maxValue "100";
					schema:defaultValue "100";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "num_gaps_gt"^^xsd:string;
					rdfs:range "xsd:integer";
					rdfs:label "Number of data gaps greater than";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "num_gaps_lt"^^xsd:string;
					rdfs:range "xsd:integer";
					rdfs:label "Number of data gaps smaller than";
					schema:minValue "0";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "num_overlaps_gt"^^xsd:string;
					rdfs:range "xsd:integer";
					rdfs:label "Number of data overlaps greater than";
					schema:minValue "0";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "num_overlaps_lt"^^xsd:string;
					rdfs:range "xsd:integer";
					rdfs:label "Number of data overlaps smaller than";
					schema:minValue "0";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "sample_stdev_gt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Standard deviation of samples greater than";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "sample_stdev_lt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Standard deviation of samples smaller than";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "sample_rms_gt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Standard quadratic mean of samples greater than";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "sample_rms_lt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Standard quadratic mean of samples smaller than";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "max_gap_gt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Maximum data gap greater than";
					schema:minValue "0";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "max_gap_lt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Maximum data gap smaller than";
					schema:minValue "0";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "sample_min_gt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Minimum data sample value greater than";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "sample_min_lt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Minimum data sample value smaller than";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "sample_max_gt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Maximum data sample value greater than";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "sample_max_lt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Maximum data sample value smaller than";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "sample_mean_gt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Mean data sample value greater than";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "sample_mean_lt"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Mean data sample value smaller than";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "network"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Stream network code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "station"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Stream station code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "location"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Stream location code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "channel"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "Stream channel code";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "csegments"^^xsd:string;
					rdfs:range "xsd:boolean";
					rdfs:label "Include continuous segments in result";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "longestonly"^^xsd:string;
					rdfs:range "xsd:boolean";
					rdfs:label "Include only the longest continuous segment";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "minlen"^^xsd:string;
					rdfs:range "xsd:float";
					rdfs:label "Limit continuous segments to this length";
					schema:minValue "0";
					hydra:required "false"^^xsd:boolean;
				];
				hydra:mapping[ a hydra:IriTemplateMapping;
					hydra:variable "include"^^xsd:string;
					rdfs:range "xsd:string";
					rdfs:label "The included level of detail in response";
					http:paramValue "default";
					http:paramValue "samples";
					http:paramValue "header";
					http:paramValue "all";
					schema:defaultValue "default";
					hydra:required "false"^^xsd:boolean;
				];
		] ;
. 
	<epos:Seismology> a skos:ConceptScheme;
		dct:title "Seismology";
		dct:description "It contains the concepts of Seismology";
. 
	<epos:seismology> a skos:ConceptScheme;
		dct:title "seismology";
		dct:description "It contains the concepts of seismology";
. 
	<epos:Seismicwaveforms> a skos:Concept;
		skos:inScheme <epos:Seismology>;
. 
	<epos:Seismicstations> a skos:Concept;
		skos:inScheme <epos:Seismology>;
. 
	<epos:Seismicdataservices> a skos:Concept;
		skos:inScheme <epos:Seismology>;
. 
	<epos:waveformquality> a skos:Concept;
		skos:inScheme <epos:seismology>;
. 
	<orcid.org/0000-0001-8626-2703/scientificContact> a schema:ContactPoint;
		schema:email "john.clinton@sed.ethz.ch";
		schema:availableLanguage "en" ;
		schema:contactType "scientificContact" ;
. 
	<orcid.org/0000-0001-8667-8549/legalContact> a schema:ContactPoint;
		schema:email "kaestli@sed.ethz.ch";
		schema:availableLanguage "en" ;
		schema:contactType "legalContact" ;
. 
	<orcid.org/0000-0001-8667-8549/financialContact> a schema:ContactPoint;
		schema:email "kaestli@sed.ethz.ch";
		schema:availableLanguage "en" ;
		schema:contactType "financialContact" ;
. 
